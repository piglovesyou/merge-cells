(()=>{"use strict";var t={607:function(t,e,n){var r=this&&this.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(o,l){function i(t){try{c(r.next(t))}catch(t){l(t)}}function a(t){try{c(r.throw(t))}catch(t){l(t)}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,a)}c((r=r.apply(t,e||[])).next())}))},o=this&&this.__generator||function(t,e){var n,r,o,l,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return l={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(l[Symbol.iterator]=function(){return this}),l;function a(a){return function(c){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;l&&(l=0,a[0]&&(i=0)),i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}};Object.defineProperty(e,"__esModule",{value:!0}),e.main=void 0;var l=n(563);function i(){var t;return r(this,void 0,void 0,(function(){var e,n,r,i,a,c,s;return o(this,(function(o){for(e=document.getElementById("table"),(n=e.tBodies[0]).remove(),r=Array.from(n.rows).map((function(t){return{country:t.cells[0].textContent,city:t.cells[1].textContent,occupation:t.cells[2].textContent,ageRange:t.cells[3].textContent,population:Number(t.cells[4].textContent)}})),i=(0,l.calcRowspan)(r,["country","city","occupation","ageRange"]),a=0;a<r.length;a++)c=n.rows.item(a),s=i[a],console.log(c.cells),0===s.country?c.cells[0].style.display="none":c.cells[0].setAttribute("rowspan",s.country.toString()),0===s.city?c.cells[1].style.display="none":c.cells[1].setAttribute("rowspan",s.city.toString()),0===s.occupation?c.cells[2].style.display="none":c.cells[2].setAttribute("rowspan",s.occupation.toString()),0===s.ageRange?c.cells[3].style.display="none":c.cells[3].setAttribute("rowspan",s.ageRange.toString()),0===s.population?c.cells[4].style.display="none":c.cells[4].setAttribute("rowspan",null===(t=s.population)||void 0===t?void 0:t.toString());return e.appendChild(n),[2]}))}))}i().catch((function(t){return console.error(t)})),e.main=i},563:function(t,e){var n=this&&this.__spreadArray||function(t,e,n){if(n||2===arguments.length)for(var r,o=0,l=e.length;o<l;o++)!r&&o in e||(r||(r=Array.prototype.slice.call(e,0,o)),r[o]=e[o]);return t.concat(r||Array.prototype.slice.call(e))};Object.defineProperty(e,"__esModule",{value:!0}),e.calcRowspan=void 0;var r=function(t,e){return t[e]};e.calcRowspan=function t(e,o,l,i,a){if(void 0===l&&(l=r),void 0===i&&(i=[]),void 0===a&&(a=[]),0==e.length)return a;var c=e[0],s=e.slice(1),u=o.reduce((function(t,e){return t[e]=1,t}),{}),p={row:c,rowspan:u};a.push(u);for(var f=[],y=0;y<o.length;y++){var h=o[y],v=i[y];if(!v||l(c,h,y)!==l(v.row,h,y))return t(s,o,l,n(n([],f,!0),Array(o.length-f.length).fill(p),!0),a);v.rowspan[h]++,p.rowspan[h]=0,f.push(v)}return t(s,o,l,f,a)}}},e={};!function n(r){var o=e[r];if(void 0!==o)return o.exports;var l=e[r]={exports:{}};return t[r].call(l.exports,l,l.exports,n),l.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,