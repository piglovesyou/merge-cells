(()=>{"use strict";var t={607:function(t,e,n){var o=this&&this.__awaiter||function(t,e,n,o){return new(n||(n=Promise))((function(r,c){function a(t){try{l(o.next(t))}catch(t){c(t)}}function s(t){try{l(o.throw(t))}catch(t){c(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,s)}l((o=o.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.main=void 0;const r=n(563);function c(){return o(this,void 0,void 0,(function*(){const t=document.getElementById("table");(0,r.applyRowspanToTable)(t)}))}c().catch((t=>console.error(t))),e.main=c},563:(t,e)=>{function n(t,e,o,r=[],c=[]){if(0==t.length)return c;const[a,...s]=t,l=e.reduce(((t,e)=>(t[e]=1,t)),{}),i={row:a,rowspan:l};c.push(l);const u=[];for(let t=0;t<e.length;t++){const l=e[t],p=r[t];if(!p||o(a,l)!==o(p.row,l))return n(s,e,o,[...u,...Array(e.length-u.length).fill(i)],c);p.rowspan[l]++,i.rowspan[l]=0,u.push(p)}return n(s,e,o,u,c)}function o(t,e=(t[0]?Array.from(Array(t[0].cells.length).keys()):[])){return n(Array.from(t),e,((t,e)=>t.cells[e].textContent))}Object.defineProperty(e,"__esModule",{value:!0}),e.calcRowspanFromObjectArray=e.calcRowspanWithTableRows=e.applyRowspanToTable=e.calcRowspanRecur=void 0,e.calcRowspanRecur=n,e.applyRowspanToTable=function(t,e){for(let n of t.tBodies){n.remove();const r=o(n.rows,e);for(let t=0;t<n.rows.length;t++){const e=n.rows.item(t),o=r[t];for(let t=0;t<e.cells.length;t++){const n=e.cells.item(t);0===o[t]?n.style.display="none":n.setAttribute("rowspan",o[t].toString())}}t.appendChild(n)}},e.calcRowspanWithTableRows=o,e.calcRowspanFromObjectArray=function(t,e){return n(t,e,((t,e)=>t[e]))}}},e={};!function n(o){var r=e[o];if(void 0!==r)return r.exports;var c=e[o]={exports:{}};return t[o].call(c.exports,c,c.exports,n),c.exports}(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,